;; The Computer Language Benchmarks Game
;;
;; fannkuch-redux
;; https://benchmarksgame-team.pages.debian.net/benchmarksgame/description/fannkuchredux.html#fannkuchredux
;;

(define (all-permutations lis)
  (when lis
    (if (null? (cdr lis))
      (list lis)
      (mapcat (lambda (elem)
                (map (lambda (l) (cons elem l))
                  (all-permutations (afilter (/= it elem) lis))))
        lis))))

(define (fannkuch lis)
  (define (iter lis permcount)
    (let ((first (car lis)))
      (if (= first 1)
        permcount
        (progn
          (let ((selected-cell (nthcdr first (cons () lis)))
                 (temp-cdr (cdr selected-cell)))
            (if selected-cell (setcdr! selected-cell ()))
            (iter (append (reverse! lis) temp-cdr) (+ permcount 1)))))))
  (iter lis 0))

(define n 9)
(define all (all-permutations (range 1 (+ n 1))))
(define checksum 0)
(define max-permcount 0)
(define total-permcount 0)
(map (lambda (val) (set! max-permcount
                     (progn
                       (define permcount (get-percount val))
                       (define inc (if (even? total-permcount) permcount (- permcount)))
                       (set! checksum (+ checksum inc))
                       (inc! total-permcount)
                       (max max-permcount permcount))))
  all)
(print max-permcount)
(print checksum)